APP GUIDE 

Tech stack - ReactJS , NodeJS , Express , MySQL 

###############################################################################################

Description and assumptions  

1)This is designed for  yoga acadmy  App is designed is way such that it would follow CRUD operations  . 
2) Make Payment method in AddEdit.js is supposed to kept blank . 
3) Client folder in code directory refers to Frontend part (react) 
4) Server folder in code directory refers to Backend part which includes server and database connectivity . 
5) App uses completely relational database (MySQL ) and used mysql2 it supports mySQL versions  8 and above . 

watch demo - https://youtu.be/QH0418vZyYM
######################################### frontend guide ######################################

Dependencies 

BrowserRouter , Routes , Route  - routing pages and setting up routes 
ToastContainer                  - show toast notifications
axios                           - fetching API's 


##React App structure - 

node_modules 		(required modules ) 
public 			(entry points of app  --index.html ) 

src         -->pages (all pages in app )  ---> Landing.js (main page ) 
					  ---> Home.js (page to show listed members )
					  ---> AddEdit.js (page with form to collect data of customers )
					  ---> View.js (page to show personal information )  

	    -->img      (images used in frontpage ) 
	    -->App.js   (entry point and routing ) 
	    -->index.js (root for index.html )
   	






###################################### Backend Guide ###########################################



Dependencies 

express   
mysql2     (mysql database version 8 or higher ) 


API methods - 

PUT - update data into databse 
POST - add data into databse 
GET - get complete  data 
GET/id - get data with given id 



Database schemas - 

Database name - yoga_class 
Table name    - user_db 

schemas  - 

create table user_db {
	id INT PRIMARY KEY , 
	name VARCHAR , 
	contact VARCHAR , 
	email VARCHAR , 
	age INT , 
	batch VARCHAR ,
} ; 


create table admin {
	id INT PRIMARY KEY , 
	user_id INT reference user_db(id) , 
} ; 




